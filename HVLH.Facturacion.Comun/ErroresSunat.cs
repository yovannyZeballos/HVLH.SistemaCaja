using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HVLH.Facturacion.Comun
{
	public class ErroresSunat
	{
		private static Dictionary<string, string> Errores = new Dictionary<string, string>();

		public static void LlenarDiccionario()
		{
			Errores.Add("0100", "El sistema no puede responder su solicitud. Intente nuevamente o comuníquese con su Administrador");
			Errores.Add("0101", "El encabezado de seguridad es incorrecto");
			Errores.Add("0102", "Usuario o contraseña incorrectos");
			Errores.Add("0103", "El Usuario ingresado no existe");
			Errores.Add("0104", "La Clave ingresada es incorrecta");
			Errores.Add("0105", "El Usuario no está activo");
			Errores.Add("0106", "El Usuario no es válido");
			Errores.Add("0109", "El sistema no puede responder su solicitud. (El servicio de autenticación no está disponible)");
			Errores.Add("0110", "No se pudo obtener la información del tipo de usuario2");
			Errores.Add("0111", "No tiene el perfil para enviar comprobantes electrónicos");
			Errores.Add("0112", "El usuario debe ser secundario");
			Errores.Add("0113", "El usuario no está afiliado a Factura Electrónica");
			Errores.Add("0125", "No se pudo obtener la constancia");
			Errores.Add("0126", "El ticket no le pertenece al usuario");
			Errores.Add("0127", "El ticket no existe");
			Errores.Add("0130", "El sistema no puede responder su solicitud. (No se pudo obtener el ticket de proceso)");
			Errores.Add("0131", "El sistema no puede responder su solicitud. (No se pudo grabar el archivo en el directorio)");
			Errores.Add("0132", "El sistema no puede responder su solicitud. (No se pudo grabar escribir en el archivo zip)");
			Errores.Add("0133", "El sistema no puede responder su solicitud. (No se pudo grabar la entrada del log)");
			Errores.Add("0134", "El sistema no puede responder su solicitud. (No se pudo grabar en el storage)");
			Errores.Add("0135", "El sistema no puede responder su solicitud. (No se pudo encolar el pedido)");
			Errores.Add("0136", "El sistema no puede responder su solicitud. (No se pudo recibir una respuesta del batch)");
			Errores.Add("0137", "El sistema no puede responder su solicitud. (Se obtuvo una respuesta nula)");
			Errores.Add("0138", "El sistema no puede responder su solicitud. (Error en Base de Datos)");
			Errores.Add("0151", "El nombre del archivo ZIP es incorrecto");
			Errores.Add("0152", "No se puede enviar por este método un archivo de resumen");
			Errores.Add("0153", "No se puede enviar por este método un archivo por lotes");
			Errores.Add("0154", "El RUC del archivo no corresponde al RUC del usuario");
			Errores.Add("0155", "El archivo ZIP esta vacío");
			Errores.Add("0156", "El archivo ZIP esta corrupto");
			Errores.Add("0157", "El archivo ZIP no contiene comprobantes");
			Errores.Add("0158", "El archivo ZIP contiene demasiados comprobantes para este tipo de envío");
			Errores.Add("0159", "El nombre del archivo XML es incorrecto");
			Errores.Add("0160", "El archivo XML esta vacío");
			Errores.Add("0161", "El nombre del archivo XML no coincide con el nombre del archivo ZIP");
			Errores.Add("0200", "No se pudo procesar su solicitud. (Ocurrió un error en el batch)");
			Errores.Add("0201", "No se pudo procesar su solicitud. (Llego un requerimiento nulo al batch)");
			Errores.Add("0202", "No se pudo procesar su solicitud. (No llego información del archivo ZIP)");
			Errores.Add("0203", "No se pudo procesar su solicitud. (No se encontró archivos en la información del archivo ZIP)");
			Errores.Add("0204", "No se pudo procesar su solicitud. (Este tipo de requerimiento solo acepta 1 archivo)");
			Errores.Add("0250", "No se pudo procesar su solicitud. (Ocurrió un error desconocido al hacer unzip)");
			Errores.Add("0251", "No se pudo procesar su solicitud. (No se pudo crear un directorio para el unzip)");
			Errores.Add("0252", "No se pudo procesar su solicitud. (No se encontró archivos dentro del zip)");
			Errores.Add("0253", "No se pudo procesar su solicitud. (No se pudo comprimir la constancia)");
			Errores.Add("0300", "No se encontró la raíz documento xml");
			Errores.Add("0301", "Elemento raíz del xml no está definido");
			Errores.Add("0302", "Código del tipo de comprobante no registrado");
			Errores.Add("0303", "No existe el directorio de schemas");
			Errores.Add("0304", "No existe el archivo de schema");
			Errores.Add("0305", "El sistema no puede procesar el archivo xml");
			Errores.Add("0306", "No se puede leer (parsear) el archivo XML");
			Errores.Add("0307", "No se pudo recuperar la constancia");
			Errores.Add("0400", "No tiene permiso para enviar casos de pruebas");
			Errores.Add("0401", "El caso de prueba no existe");
			Errores.Add("0402", "La numeración o nombre del documento ya ha sido enviado anteriormente");
			Errores.Add("0403", "El documento afectado por la nota no existe");
			Errores.Add("0404", "El documento afectado por la nota se encuentra rechazado");
			Errores.Add("1001", "ID - El dato SERIE-CORRELATIVO no cumple con el formato de acuerdo al tipo de comprobante");
			Errores.Add("1002", "El XML no contiene información en el tag ID");
			Errores.Add("1003", "InvoiceTypeCode - El valor del tipo de documento es invalido o no coincide con el nombre del archivo");
			Errores.Add("1004", "El XML no contiene el tag o no existe información de InvoiceTypeCode");
			Errores.Add("1005", "CustomerAssignedAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("1006", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del emisor del documento");
			Errores.Add("1007", "AdditionalAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("1008", "El XML no contiene el tag o no existe información de AdditionalAccountID del emisor del documento");
			Errores.Add("1009", "IssueDate - El dato ingresado no cumple con el patrón YYYY-MM-DD");
			Errores.Add("1010", "El XML no contiene el tag IssueDate");
			Errores.Add("1011", "IssueDate- El dato ingresado no es valido");
			Errores.Add("1012", "ID - El dato ingresado no cumple con el patrón SERIE-CORRELATIVO");
			Errores.Add("1013", "El XML no contiene información en el tag ID");
			Errores.Add("1014", "CustomerAssignedAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("1015", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del emisor del documento");
			Errores.Add("1016", "AdditionalAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("1017", "El XML no contiene el tag AdditionalAccountID del emisor del documento");
			Errores.Add("1018", "IssueDate - El dato ingresado no cumple con el patrón YYYY-MM-DD");
			Errores.Add("1019", "El XML no contiene el tag IssueDate");
			Errores.Add("1020", "IssueDate- El dato ingresado no es valido");
			Errores.Add("1021", "Error en la validación de la nota de crédito");
			Errores.Add("1022", "La serie o número del documento modificado por la Nota Electrónica no cumple con el formato establecido");
			Errores.Add("1023", "No se ha especificado el tipo de documento modificado por la Nota electrónica");
			Errores.Add("1024", "CustomerAssignedAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("1025", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del emisor del documento");
			Errores.Add("1026", "AdditionalAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("1027", "El XML no contiene el tag AdditionalAccountID del emisor del documento");
			Errores.Add("1028", "IssueDate - El dato ingresado no cumple con el patrón YYYY-MM-DD");
			Errores.Add("1029", "El XML no contiene el tag IssueDate");
			Errores.Add("1030", "IssueDate- El dato ingresado no es valido");
			Errores.Add("1031", "Error en la validación de la nota de debito");
			Errores.Add("1032", "El comprobante fue informado previamente en una comunicación de baja");
			Errores.Add("1033", "El comprobante fue registrado previamente con otros datos");
			Errores.Add("1034", "Número de RUC del nombre del archivo no coincide con el consignado en el contenido del archivo XML");
			Errores.Add("1035", "Número de Serie del nombre del archivo no coincide con el consignado en el contenido del archivo XML");
			Errores.Add("1036", "Número de documento en el nombre del archivo no coincide con el consignado en el contenido del XML");
			Errores.Add("1037", "El XML no contiene el tag o no existe información de RegistrationName del emisor del documento");
			Errores.Add("1038", "RegistrationName - El nombre o razón social del emisor no cumple con el estándar");
			Errores.Add("1039", "Solo se pueden recibir notas electrónicas que modifican facturas");
			Errores.Add("1040", "El tipo de documento modificado por la nota electrónica no es valido");
			Errores.Add("1041", "cac:PrepaidPayment/cbc:ID - El tag no contiene el atributo @SchemaID. que indica el tipo de documento que realiza el anticipo");
			Errores.Add("1042", "cac:PrepaidPayment/cbc:InstructionID – El tag no contiene el atributo @SchemaID. Que indica el tipo de documento del emisor del documento del anticipo");
			Errores.Add("1043", "cac:OriginatorDocumentReference/cbc:ID - El tag no contiene el atributo @SchemaID. Que indica el tipo de documento del originador del documento electrónico");
			Errores.Add("1044", "cac:PrepaidPayment/cbc:InstructionID – El dato ingresado no cumple con el estándar");
			Errores.Add("1045", "cac:OriginatorDocumentReference/cbc:ID – El dato ingresado no cumple con el estándar");
			Errores.Add("1046", "cbc:Amount - El dato ingresado no cumple con el estándar");
			Errores.Add("1047", "cbc:Quantity - El dato ingresado no cumple con el estándar");
			Errores.Add("1048", "El XML no contiene el tag o no existe información de PrepaidAmount para un documento con anticipo");
			Errores.Add("1049", "ID - Serie y Número del archivo no coincide con el consignado en el contenido del XML");
			Errores.Add("1050", "El XML no contiene información en el tag DespatchAdviceTypeCode");
			Errores.Add("1051", "DespatchAdviceTypeCode - El valor del tipo de guía es inválido");
			Errores.Add("1052", "DespatchAdviceTypeCode - No coincide con el consignado en el contenido del XML");
			Errores.Add("1053", "El XML no contiene información en el tag /DespatchAdvice/cac:OrderReference/cbc:ID");
			Errores.Add("1054", "cac:OrderReference/cac:DocumentReference/cbc:ID - El dato SERIE-número no cumple con el formato de acuerdo a la Guía");
			Errores.Add("1055", "Serie - No cumple con el formato de acuerdo a guía electrónica (EG01 ó TXXXX)");
			Errores.Add("1056", "El XML no contiene información en el tag /DespatchAdvice/cac:OrderReference/cbc:OrderTypeCode");
			Errores.Add("1057", "El XML no contiene información en el tag cac:AdditionalDocumentReference/cbc:ID");
			Errores.Add("1058", "El XML no contiene información en el tag cac:AdditionalDocumentReference/cbc:DocumentTypeCode");
			Errores.Add("1059", "El XML no contiene firma digital");
			Errores.Add("1060", "El XML no contiene el tag o no existe información del número de RUC del Remitente");
			Errores.Add("1061", "El número de RUC del Remitente no existe");
			Errores.Add("1062", "El XML no contiene el tag o no existe información en el tag /DespatchAdvice/cac:Shipment/cbc:HandlingCode");
			Errores.Add("1063", "cbc:ShippingPriorityLevelCode: El dato ingresado no es valido");
			Errores.Add("1064", "El XML no contiene el tag o no existe información en el tag cac:DespatchLine de bienes a transportar");
			Errores.Add("1065", "El XML no contiene información en el tag cbc:TransportModeCode");
			Errores.Add("1066", "El XML no contiene el tag o no existe información en el tag cac:CarrierParty de datos del transportista");
			Errores.Add("1067", "El XML no contiene el tag o no existe información en el tag cac:TransportMeans de datos del vehículo");
			Errores.Add("1068", "El XML no contiene el tag o no existe información en el tag cac:DriverPerson de datos del conductor");
			Errores.Add("1069", "StartDate: El XML no contiene fecha de inicio de traslado");
			Errores.Add("1070", "StartDate - El dato ingresado no cumple con el patrón YYYY-MM-DD");
			Errores.Add("1071", "StartDate - El dato ingresado no es valido");
			Errores.Add("1072", "Starttime - El dato ingresado no cumple con el patrón HH:mm:ss.SZ");
			Errores.Add("1073", "StartTime - El dato ingresado no es valido");
			Errores.Add("1074", "No ha consignado punto de llegada");
			Errores.Add("1075", "No ha consignado punto de partida");
			Errores.Add("2010", "El contribuyente no está activo");
			Errores.Add("2011", "El contribuyente no está habido");
			Errores.Add("2012", "El contribuyente no está autorizado a emitir comprobantes electrónicos");
			Errores.Add("2013", "El contribuyente no cumple con tipo de empresa o tributos requeridos");
			Errores.Add("2014", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del receptor del documento");
			Errores.Add("2015", "El XML no contiene el tag o no existe información de AdditionalAccountID del receptor del documento");
			Errores.Add("2016", "AdditionalAccountID - El dato ingresado en el tipo de documento de identidad del receptor no cumple con el estándar");
			Errores.Add("2017", "CustomerAssignedAccountID - El número de documento de identidad del receptor debe ser RUC");
			Errores.Add("2018", "CustomerAssignedAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("2019", "El XML no contiene el tag o no existe información de RegistrationName del emisor del documento");
			Errores.Add("2020", "RegistrationName - El nombre o razón social del emisor no cumple con el estándar");
			Errores.Add("2021", "El XML no contiene el tag o no existe información de RegistrationName del receptor del documento");
			Errores.Add("2022", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2023", "El Numero de orden del ítem no cumple con el formato establecido");
			Errores.Add("2024", "El XML no contiene el tag InvoicedQuantity en el detalle de los Ítems");
			Errores.Add("2025", "InvoicedQuantity El dato ingresado no cumple con el estándar");
			Errores.Add("2026", "El XML no contiene el tag cac: Item / cbc:Description en el detalle de los Ítems");
			Errores.Add("2027", "El XML no contiene el tag o no existe información de cac:Item / cbc:Description del item");
			Errores.Add("2028", "Debe existir el tag cac: AlternativeConditionPrice con un elemento cbc: PriceTypeCode con valor 01");
			Errores.Add("2029", "PriceTypeCode El dato ingresado no cumple con el estándar");
			Errores.Add("2030", "El XML no contiene el tag cbc: PriceTypeCode");
			Errores.Add("2031", "LineExtensionAmount El dato ingresado no cumple con el estándar");
			Errores.Add("2032", "El XML no contiene el tag LineExtensionAmount en el detalle de los Items");
			Errores.Add("2033", "El dato ingresado en TaxAmount de la línea no cumple con el formato establecido");
			Errores.Add("2034", "TaxAmount es obligatorio");
			Errores.Add("2035", "cac: TaxCategory / cac:TaxScheme / cbc:ID El dato ingresado no cumple con el estándar CODIGO DESCRIPCION");
			Errores.Add("2036", "El código del tributo es invalido");
			Errores.Add("2037", "El XML no contiene el tag cac: TaxCategory / cac:TaxScheme / cbc:ID del Item");
			Errores.Add("2038", "cac: TaxScheme / cbc:Name del item - No existe el tag o el dato ingresado no cumple con el estándar");
			Errores.Add("2039", "El XML no contiene el tag cac: TaxCategory / cac:TaxScheme / cbc:Name del Item");
			Errores.Add("2040", "El tipo de afectación del IGV es incorrecto");
			Errores.Add("2041", "El sistema de cálculo del ISC es incorrecto");
			Errores.Add("2042", "Debe indicar el IGV. Es un campo obligatorio");
			Errores.Add("2043", "El dato ingresado en PayableAmount no cumple con el formato establecido");
			Errores.Add("2044", "PayableAmount es obligatorio");
			Errores.Add("2045", "El valor ingresado en AdditionalMonetaryTotal / cbc:ID es incorrecto");
			Errores.Add("2046", "AdditionalMonetaryTotal / cbc:ID debe tener valor");
			Errores.Add("2047", "Es obligatorio al menos un AdditionalMonetaryTotal con código 1001, 1002 o 1003");
			Errores.Add("2048", "El dato ingresado en TaxAmount no cumple con el formato establecido");
			Errores.Add("2049", "TaxAmount es obligatorio");
			Errores.Add("2050", "TaxScheme ID -No existe el tag o el dato ingresado no cumple con el estándar");
			Errores.Add("2051", "El código del tributo es invalido");
			Errores.Add("2052", "El XML no contiene el tag TaxScheme ID de impuestos globales");
			Errores.Add("2053", "TaxScheme Name -No existe el tag o el dato ingresado no cumple con el estándar");
			Errores.Add("2054", "El XML no contiene el tag TaxScheme Name de impuestos globales");
			Errores.Add("2055", "TaxScheme TaxTypeCode -El dato ingresado no cumple con el estándar");
			Errores.Add("2056", "El XML no contiene el tag TaxScheme TaxTypeCode de impuestos globales");
			Errores.Add("2057", "El Name o TaxTypeCode debe corresponder con el Id para el IGV");
			Errores.Add("2058", "El Name o TaxTypeCode debe corresponder con el Id para el ISC");
			Errores.Add("2059", "El dato ingresado en TaxSubtotal / cbc:TaxAmount no cumple con el formato establecido");
			Errores.Add("2060", "TaxSubtotal / cbc:TaxAmount es obligatorio");
			Errores.Add("2061", "El tag global cac:TaxTotal / cbc:TaxAmount debe tener el mismo valor que cac:TaxTotal / cac:Subtotal / cbc:TaxAmount");
			Errores.Add("2062", "El dato ingresado en PayableAmount no cumple con el formato establecido");
			Errores.Add("2063", "El XML no contiene el tag PayableAmount");
			Errores.Add("2064", "El dato ingresado en ChargeTotalAmount no cumple con el formato establecido");
			Errores.Add("2065", "El dato ingresado en el campo Total Descuentos no cumple con el formato establecido");
			Errores.Add("2066", "Debe indicar una descripción para el tag sac:AdditionalProperty / cbc:Value");
			Errores.Add("2067", "cac: Price / cbc:PriceAmount - El dato ingresado no cumple con el estándar");
			Errores.Add("2068", "El XML no contiene el tag cac: Price / cbc:PriceAmount en el detalle de los Items");
			Errores.Add("2069", "DocumentCurrencyCode - El dato ingresado no cumple con la estructura");
			Errores.Add("2070", "El XML no contiene el tag o no existe información de DocumentCurrencyCode");
			Errores.Add("2071", "La moneda debe ser la misma en todo el documento");
			Errores.Add("2072", "CustomizationID - La versión del documento no es la correcta");
			Errores.Add("2073", "El XML no contiene el tag o no existe información de CustomizationID");
			Errores.Add("2074", "UBLVersionID - La versión del UBL no es correcta");
			Errores.Add("2075", "El XML no contiene el tag o no existe información de UBLVersionID");
			Errores.Add("2076", "cac: Signature / cbc:ID - Falta el identificador de la firma");
			Errores.Add("2077", "El tag cac: Signature / cbc:ID debe contener información");
			Errores.Add("2078", "cac: Signature / cac:SignatoryParty / cac:PartyIdentification / cbc:ID - Debe ser igual al RUC del emisor");
			Errores.Add("2079", "El XML no contiene el tag cac: Signature / cac:SignatoryParty / cac:PartyIdentification / cbc:ID");
			Errores.Add("2080", "cac: Signature / cac:SignatoryParty / cac:PartyName / cbc:Name - No cumple con el estándar");
			Errores.Add("2081", "El XML no contiene el tag cac: Signature / cac:SignatoryParty / cac:PartyName / cbc:Name");
			Errores.Add("2082", "cac: Signature / cac:DigitalSignatureAttachment / cac:ExternalReference / cbc:URI - No cumple con el estándar");
			Errores.Add("2083", "El XML no contiene el tag cac: Signature / cac:DigitalSignatureAttachment / cac:ExternalReference / cbc:URI");
			Errores.Add("2084", "ext: UBLExtensions / ext:UBLExtension / ext:ExtensionContent / ds:Signature / @Id - No cumple con el estándar");
			Errores.Add("2085", "El XML no contiene el tag ext: UBLExtensions / ext:UBLExtension / ext:ExtensionContent / ds:Signature / @Id");
			Errores.Add("2086", "ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:CanonicalizationMethod / @Algorithm - No cumple con el estándar");
			Errores.Add("2087", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:CanonicalizationMethod / @Algorithm");
			Errores.Add("2088", "ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:SignatureMethod / @Algorithm - No cumple con el estándar");
			Errores.Add("2089", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:SignatureMethod / @Algorithm");
			Errores.Add("2090", "ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / @URI - Debe estar vacío para id");
			Errores.Add("2091", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / @URI");
			Errores.Add("2092", "ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo /.../ ds:Transform @Algorithm -No cumple con el estándar");
			Errores.Add("2093", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / ds:Transform @Algorithm");
			Errores.Add("2094", "ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / ds:DigestMethod / @Algorithm - No cumple con el estándar");
			Errores.Add("2095", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / ds:DigestMethod / @Algorithm");
			Errores.Add("2096", "ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / ds:DigestValue - No cumple con el estándar");
			Errores.Add("2097", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignedInfo / ds:Reference / ds:DigestValue");
			Errores.Add("2098", "ext: UBLExtensions /.../ ds:Signature / ds:SignatureValue - No cumple con el estándar CODIGO DESCRIPCION");
			Errores.Add("2099", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:SignatureValue");
			Errores.Add("2100", "ext: UBLExtensions /.../ ds:Signature / ds:KeyInfo / ds:X509Data / ds:X509Certificate - No cumple con el estándar");
			Errores.Add("2101", "El XML no contiene el tag ext: UBLExtensions /.../ ds:Signature / ds:KeyInfo / ds:X509Data / ds:X509Certificate");
			Errores.Add("2102", "Error al procesar la factura");
			Errores.Add("2103", "La serie ingresada no es válida");
			Errores.Add("2104", "Numero de RUC del emisor no existe");
			Errores.Add("2105", "Factura a dar de baja no se encuentra registrada en SUNAT");
			Errores.Add("2106", "Factura a dar de baja ya se encuentra en estado de baja");
			Errores.Add("2107", "Numero de RUC SOL no coincide con RUC emisor");
			Errores.Add("2108", "Presentación fuera de fecha");
			Errores.Add("2109", "El comprobante fue registrado previamente con otros datos");
			Errores.Add("2110", "UBLVersionID - La versión del UBL no es correcta");
			Errores.Add("2111", "El XML no contiene el tag o no existe información de UBLVersionID");
			Errores.Add("2112", "CustomizationID - La versión del documento no es correcta");
			Errores.Add("2113", "El XML no contiene el tag o no existe información de CustomizationID");
			Errores.Add("2114", "DocumentCurrencyCode - El dato ingresado no cumple con la estructura");
			Errores.Add("2115", "El XML no contiene el tag o no existe información de DocumentCurrencyCode");
			Errores.Add("2116", "El tipo de documento modificado por la Nota de crédito debe ser factura electrónica o ticket");
			Errores.Add("2117", "La serie o número del documento modificado por la Nota de Crédito no cumple con el formato establecido");
			Errores.Add("2118", "Debe indicar las facturas relacionadas a la Nota de Crédito");
			Errores.Add("2119", "La factura relacionada en la Nota de crédito no está registrada.");
			Errores.Add("2120", "La factura relacionada en la nota de crédito se encuentra de baja");
			Errores.Add("2121", "La factura relacionada en la nota de crédito está registrada como rechazada");
			Errores.Add("2122", "El tag cac: LegalMonetaryTotal / cbc:PayableAmount debe tener información valida");
			Errores.Add("2123", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2124", "El XML no contiene el tag RegistrationName del emisor del documento");
			Errores.Add("2125", "ReferenceID - El dato ingresado debe indicar SERIE - CORRELATIVO del documento al que se relaciona la Nota");
			Errores.Add("2126", "El XML no contiene información en el tag ReferenceID del documento al que se relaciona la nota");
			Errores.Add("2127", "ResponseCode - El dato ingresado no cumple con la estructura");
			Errores.Add("2128", "El XML no contiene el tag o no existe información de ResponseCode");
			Errores.Add("2129", "AdditionalAccountID - El dato ingresado en el tipo de documento de identidad del receptor no cumple con el estándar");
			Errores.Add("2130", "El XML no contiene el tag o no existe información de AdditionalAccountID del receptor del documento");
			Errores.Add("2131", "CustomerAssignedAccountID - El número de documento de identidad del receptor debe ser RUC");
			Errores.Add("2132", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del receptor del documento");
			Errores.Add("2133", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2134", "El XML no contiene el tag o no existe información de RegistrationName del receptor del documento");
			Errores.Add("2135", "cac: DiscrepancyResponse / cbc:Description - El dato ingresado no cumple con la estructura");
			Errores.Add("2136", "El XML no contiene el tag o no existe información de cac:DiscrepancyResponse / cbc:Description");
			Errores.Add("2137", "El Número de orden del ítem no cumple con el formato establecido");
			Errores.Add("2138", "CreditedQuantity / @unitCode - El dato ingresado no cumple con el estándar");
			Errores.Add("2139", "CreditedQuantity - El dato ingresado no cumple con el estándar");
			Errores.Add("2140", "El PriceTypeCode debe tener el valor 01");
			Errores.Add("2141", "cac: TaxCategory / cac:TaxScheme / cbc:ID - El dato ingresado no cumple con el estándar");
			Errores.Add("2142", "El código del tributo es invalido");
			Errores.Add("2143", "cac: TaxScheme / cbc:Name del ítem - No existe el tag o el dato ingresado no cumple con el estándar");
			Errores.Add("2144", "cac: TaxCategory / cac:TaxScheme / cbc:TaxTypeCode El dato ingresado no cumple con el estándar");
			Errores.Add("2145", "El tipo de afectación del IGV es incorrecto");
			Errores.Add("2146", "El Nombre Internacional debe ser VAT");
			Errores.Add("2147", "El sistema de cálculo del ISC es incorrecto");
			Errores.Add("2148", "El Nombre Internacional debe ser EXC");
			Errores.Add("2149", "El dato ingresado en PayableAmount no cumple con el formato establecido");
			Errores.Add("2150", "El valor ingresado en AdditionalMonetaryTotal / cbc:ID es incorrecto");
			Errores.Add("2151", "AdditionalMonetaryTotal / cbc:ID debe tener valor");
			Errores.Add("2152", "Es obligatorio al menos un AdditionalInformation");
			Errores.Add("2153", "Error al procesar la Nota de Crédito");
			Errores.Add("2154", "TaxAmount - El dato ingresado en impuestos globales no cumple con el estándar");
			Errores.Add("2155", "El XML no contiene el tag TaxAmount de impuestos globales");
			Errores.Add("2156", "TaxScheme ID -El dato ingresado no cumple con el estándar");
			Errores.Add("2157", "El código del tributo es invalido");
			Errores.Add("2158", "El XML no contiene el tag o no existe información de TaxScheme ID de impuestos globales");
			Errores.Add("2159", "TaxScheme Name -El dato ingresado no cumple con el estándar");
			Errores.Add("2160", "El XML no contiene el tag o no existe información de TaxScheme Name de impuestos globales");
			Errores.Add("2161", "CustomizationID - La versión del documento no es correcta CODIGO DESCRIPCION");
			Errores.Add("2162", "El XML no contiene el tag o no existe información de CustomizationID");
			Errores.Add("2163", "UBLVersionID - La versión del UBL no es correcta");
			Errores.Add("2164", "El XML no contiene el tag o no existe información de UBLVersionID");
			Errores.Add("2165", "Error al procesar la Nota de Debito");
			Errores.Add("2166", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2167", "El XML no contiene el tag RegistrationName del emisor del documento");
			Errores.Add("2168", "DocumentCurrencyCode - El dato ingresado no cumple con el formato establecido");
			Errores.Add("2169", "El XML no contiene el tag o no existe información de DocumentCurrencyCode");
			Errores.Add("2170", "ReferenceID - El dato ingresado debe indicar SERIE - CORRELATIVO del documento al que se relaciona la Nota");
			Errores.Add("2171", "El XML no contiene información en el tag ReferenceID del documento al que se relaciona la nota");
			Errores.Add("2172", "ResponseCode - El dato ingresado no cumple con la estructura");
			Errores.Add("2173", "El XML no contiene el tag o no existe información de ResponseCode");
			Errores.Add("2174", "cac: DiscrepancyResponse / cbc:Description - El dato ingresado no cumple con la estructura");
			Errores.Add("2175", "El XML no contiene el tag o no existe información de cac:DiscrepancyResponse / cbc:Description");
			Errores.Add("2176", "AdditionalAccountID - El dato ingresado en el tipo de documento de identidad del receptor no cumple con el estándar");
			Errores.Add("2177", "El XML no contiene el tag o no existe información de AdditionalAccountID del receptor del documento");
			Errores.Add("2178", "CustomerAssignedAccountID - El número de documento de identidad del receptor debe ser RUC.");
			Errores.Add("2179", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del receptor del documento");
			Errores.Add("2180", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2181", "El XML no contiene el tag o no existe información de RegistrationName del receptor del documento");
			Errores.Add("2182", "TaxScheme ID -El dato ingresado no cumple con el estándar");
			Errores.Add("2183", "El código del tributo es invalido");
			Errores.Add("2184", "El XML no contiene el tag o no existe información de TaxScheme ID de impuestos globales");
			Errores.Add("2185", "TaxScheme Name -El dato ingresado no cumple con el estándar");
			Errores.Add("2186", "El XML no contiene el tag o no existe información de TaxScheme Name de impuestos globales");
			Errores.Add("2187", "El Numero de orden del ítem no cumple con el formato establecido");
			Errores.Add("2188", "DebitedQuantity / @unitCode El dato ingresado no cumple con el estándar");
			Errores.Add("2189", "DebitedQuantity El dato ingresado no cumple con el estándar");
			Errores.Add("2190", "El XML no contiene el tag Price / cbc:PriceAmount en el detalle de los Items");
			Errores.Add("2191", "El XML no contiene el tag Price / cbc:LineExtensionAmount en el detalle de los Items");
			Errores.Add("2192", "EL PriceTypeCode debe tener el valor 01");
			Errores.Add("2193", "cac: TaxCategory / cac:TaxScheme / cbc:ID El dato ingresado no cumple con el estándar");
			Errores.Add("2194", "El código del tributo es invalido");
			Errores.Add("2195", "cac: TaxScheme / cbc:Name del item - No existe el tag o el dato ingresado no cumple con el estándar");
			Errores.Add("2196", "cac: TaxCategory / cac:TaxScheme / cbc:TaxTypeCode El dato ingresado no cumple con el estándar");
			Errores.Add("2197", "El tipo de afectación del IGV es incorrecto");
			Errores.Add("2198", "El Nombre Internacional debe ser VAT");
			Errores.Add("2199", "El sistema de cálculo del ISC es incorrecto");
			Errores.Add("2200", "El Nombre Internacional debe ser EXC");
			Errores.Add("2201", "El tag cac: RequestedMonetaryTotal / cbc:PayableAmount debe tener información valida");
			Errores.Add("2202", "TaxAmount - El dato ingresado en impuestos globales no cumple con el estándar");
			Errores.Add("2203", "El XML no contiene el tag TaxAmount de impuestos globales");
			Errores.Add("2204", "El tipo de documento modificado por la Nota de Debito debe ser factura electrónica o ticket");
			Errores.Add("2205", "La serie o número del documento modificado por la Nota de Debito no cumple con el formato establecido");
			Errores.Add("2206", "Debe indicar los documentos afectados por la Nota de Debito");
			Errores.Add("2207", "La factura relacionada en la nota de débito se encuentra de baja");
			Errores.Add("2208", "La factura relacionada en la nota de débito está registrada como rechazada");
			Errores.Add("2209", "La factura relacionada en la Nota de débito no está registrada");
			Errores.Add("2210", "El dato ingresado no cumple con el formato RC - fecha - correlativo");
			Errores.Add("2211", "El XML no contiene el tag ID");
			Errores.Add("2212", "UBLVersionID - La versión del UBL del resumen de boletas no es correcta");
			Errores.Add("2213", "El XML no contiene el tag UBLVersionID");
			Errores.Add("2214", "CustomizationID - La versión del resumen de boletas no es correcta");
			Errores.Add("2215", "El XML no contiene el tag CustomizationID");
			Errores.Add("2216", "CustomerAssignedAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("2217", "El XML no contiene el tag CustomerAssignedAccountID del emisor del documento");
			Errores.Add("2218", "AdditionalAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("2219", "El XML no contiene el tag AdditionalAccountID del emisor del documento");
			Errores.Add("2220", "El ID debe coincidir con el nombre del archivo");
			Errores.Add("2221", "El RUC debe coincidir con el RUC del nombre del archivo");
			Errores.Add("2222", "El contribuyente no está autorizado a emitir comprobantes electrónicos");
			Errores.Add("2223", "El archivo ya fue presentado anteriormente");
			Errores.Add("2224", "Numero de RUC SOL no coincide con RUC emisor CODIGO DESCRIPCION");
			Errores.Add("2225", "Numero de RUC del emisor no existe");
			Errores.Add("2226", "El contribuyente no está activo");
			Errores.Add("2227", "El contribuyente no cumple con tipo de empresa o tributos requeridos");
			Errores.Add("2228", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2229", "El XML no contiene el tag RegistrationName del emisor del documento");
			Errores.Add("2230", "IssueDate - El dato ingresado no cumple con el patrón YYYY-MM - DD");
			Errores.Add("2231", "El XML no contiene el tag IssueDate");
			Errores.Add("2232", "IssueDate - El dato ingresado no es valido");
			Errores.Add("2233", "ReferenceDate - El dato ingresado no cumple con el patrón YYYY-MM - DD");
			Errores.Add("2234", "El XML no contiene el tag ReferenceDate");
			Errores.Add("2235", "ReferenceDate - El dato ingresado no es valido");
			Errores.Add("2236", "La fecha del IssueDate no debe ser mayor al Today");
			Errores.Add("2237", "La fecha del ReferenceDate no debe ser mayor al Today");
			Errores.Add("2238", "LineID - El dato ingresado no cumple con el estándar");
			Errores.Add("2239", "LineID - El dato ingresado debe ser correlativo mayor a cero");
			Errores.Add("2240", "El XML no contiene el tag LineID de SummaryDocumentsLine");
			Errores.Add("2241", "DocumentTypeCode - El valor del tipo de documento es invalido");
			Errores.Add("2242", "El XML no contiene el tag DocumentTypeCode");
			Errores.Add("2243", "El dato ingresado no cumple con el patrón SERIE");
			Errores.Add("2244", "El XML no contiene el tag DocumentSerialID");
			Errores.Add("2245", "El dato ingresado en StartDocumentNumberID debe ser numérico");
			Errores.Add("2246", "El XML no contiene el tag StartDocumentNumberID");
			Errores.Add("2247", "El dato ingresado en sac: EndDocumentNumberID debe ser numérico");
			Errores.Add("2248", "El XML no contiene el tag sac: EndDocumentNumberID");
			Errores.Add("2249", "Los rangos deben ser mayores a cero");
			Errores.Add("2250", "En el rango de comprobantes, el EndDocumentNumberID debe ser mayor o igual al StartInvoiceNumberID");
			Errores.Add("2251", "El dato ingresado en TotalAmount debe ser numérico mayor o igual a cero");
			Errores.Add("2252", "El XML no contiene el tag TotalAmount");
			Errores.Add("2253", "El dato ingresado en TotalAmount debe ser numérico mayor a cero");
			Errores.Add("2254", "PaidAmount - El dato ingresado no cumple con el estándar");
			Errores.Add("2255", "El XML no contiene el tag PaidAmount");
			Errores.Add("2256", "InstructionID - El dato ingresado no cumple con el estándar");
			Errores.Add("2257", "El XML no contiene el tag InstructionID");
			Errores.Add("2258", "Debe indicar Referencia de Importes asociados a las boletas de venta");
			Errores.Add("2259", "Debe indicar 3 Referencias de Importes asociados a las boletas de venta");
			Errores.Add("2260", "PaidAmount - El dato ingresado debe ser mayor o igual a 0.00");
			Errores.Add("2261", "cbc: Amount - El dato ingresado no cumple con el estándar");
			Errores.Add("2262", "El XML no contiene el tag cbc: Amount");
			Errores.Add("2263", "ChargeIndicator - El dato ingresado no cumple con el estándar");
			Errores.Add("2264", "El XML no contiene el tag ChargeIndicator");
			Errores.Add("2265", "Debe indicar Información acerca del Importe Total de Otros Cargos");
			Errores.Add("2266", "Debe indicar cargos mayores o iguales a cero");
			Errores.Add("2267", "TaxScheme ID -El dato ingresado no cumple con el estándar");
			Errores.Add("2268", "El código del tributo es invalido");
			Errores.Add("2269", "El XML no contiene el tag TaxScheme ID de Información acerca del importe total de un tipo particular de impuesto");
			Errores.Add("2270", "TaxScheme Name -El dato ingresado no cumple con el estándar");
			Errores.Add("2271", "El XML no contiene el tag TaxScheme Name de impuesto");
			Errores.Add("2272", "TaxScheme TaxTypeCode -El dato ingresado no cumple con el estándar");
			Errores.Add("2273", "TaxAmount - El dato ingresado no cumple con el estándar");
			Errores.Add("2274", "El XML no contiene el tag TaxAmount");
			Errores.Add("2275", "Si el código de tributo es 2000, el nombre del tributo debe ser ISC");
			Errores.Add("2276", "Si el código de tributo es 1000, el nombre del tributo debe ser IGV");
			Errores.Add("2277", "No se ha consignado ninguna información del importe total de tributos");
			Errores.Add("2278", "Debe indicar Información acerca del importe total de ISC e IGV");
			Errores.Add("2279", "Debe indicar Items de consolidado de documentos");
			Errores.Add("2280", "Existen problemas con la información del resumen de comprobantes");
			Errores.Add("2281", "Error en la validación de los rangos de los comprobantes");
			Errores.Add("2282", "Existe documento ya informado anteriormente");
			Errores.Add("2283", "El dato ingresado no cumple con el formato RA - fecha - correlativo");
			Errores.Add("2284", "El XML no contiene el tag ID");
			Errores.Add("2285", "El ID debe coincidir con el nombre del archivo");
			Errores.Add("2286", "El RUC debe coincidir con el RUC del nombre del archivo");
			Errores.Add("2287", "AdditionalAccountID - El dato ingresado no cumple con el estándar CODIGO DESCRIPCION");
			Errores.Add("2288", "El XML no contiene el tag AdditionalAccountID del emisor del documento");
			Errores.Add("2289", "CustomerAssignedAccountID - El dato ingresado no cumple con el estándar");
			Errores.Add("2290", "El XML no contiene el tag CustomerAssignedAccountID del emisor del documento");
			Errores.Add("2291", "El contribuyente no está autorizado a emitir comprobantes electrónicos");
			Errores.Add("2292", "Numero de RUC SOL no coincide con RUC emisor");
			Errores.Add("2293", "Numero de RUC del emisor no existe");
			Errores.Add("2294", "El contribuyente no está activo");
			Errores.Add("2295", "El contribuyente no cumple con tipo de empresa o tributos requeridos");
			Errores.Add("2296", "RegistrationName - El dato ingresado no cumple con el estándar");
			Errores.Add("2297", "El XML no contiene el tag RegistrationName del emisor del documento");
			Errores.Add("2298", "IssueDate - El dato ingresado no cumple con el patrón YYYY-MM - DD");
			Errores.Add("2299", "El XML no contiene el tag IssueDate");
			Errores.Add("2300", "IssueDate - El dato ingresado no es valido");
			Errores.Add("2301", "La fecha del IssueDate no debe ser mayor al Today");
			Errores.Add("2302", "ReferenceDate - El dato ingresado no cumple con el patrón YYYY-MM - DD");
			Errores.Add("2303", "El XML no contiene el tag ReferenceDate");
			Errores.Add("2304", "ReferenceDate - El dato ingresado no es valido");
			Errores.Add("2305", "LineID - El dato ingresado no cumple con el estándar");
			Errores.Add("2306", "LineID - El dato ingresado debe ser correlativo mayor a cero");
			Errores.Add("2307", "El XML no contiene el tag LineID de VoidedDocumentsLine");
			Errores.Add("2308", "DocumentTypeCode - El valor del tipo de documento es invalido");
			Errores.Add("2309", "El XML no contiene el tag DocumentTypeCode");
			Errores.Add("2310", "El dato ingresado no cumple con el patrón SERIE");
			Errores.Add("2311", "El XML no contiene el tag DocumentSerialID");
			Errores.Add("2312", "El dato ingresado en DocumentNumberID debe ser numérico y como máximo de 8 dígitos");
			Errores.Add("2313", "El XML no contiene el tag DocumentNumberID");
			Errores.Add("2314", "El dato ingresado en VoidReasonDescription debe contener información válida");
			Errores.Add("2315", "El XML no contiene el tag VoidReasonDescription");
			Errores.Add("2316", "Debe indicar Items en VoidedDocumentsLine");
			Errores.Add("2317", "Error al procesar el resumen de anulados");
			Errores.Add("2318", "CustomizationID - La versión del documento no es correcta");
			Errores.Add("2319", "El XML no contiene el tag CustomizationID");
			Errores.Add("2320", "UBLVersionID - La versión del UBL no es la correcta");
			Errores.Add("2321", "El XML no contiene el tag UBLVersionID");
			Errores.Add("2322", "Error en la validación de los rangos");
			Errores.Add("2323", "Existe documento ya informado anteriormente en una comunicación de baja");
			Errores.Add("2324", "El archivo de comunicación de baja ya fue presentado anteriormente");
			Errores.Add("2325", "El certificado usado no es el comunicado a SUNAT");
			Errores.Add("2326", "El certificado usado se encuentra de baja");
			Errores.Add("2327", "El certificado usado no se encuentra vigente");
			Errores.Add("2328", "El certificado usado  se encuentra revocado");
			Errores.Add("2329", "La fecha de emisión se encuentra fuera del límite permitido");
			Errores.Add("2330", "La fecha de generación de la comunicación debe ser igual a la fecha consignada en el nombre del archivo");
			Errores.Add("2331", "Número de RUC del nombre del archivo no coincide con el consignado en el contenido del archivo XML");
			Errores.Add("2332", "Número de Serie del nombre del archivo no coincide con el consignado en el contenido del archivo XML");
			Errores.Add("2333", "Número de documento en el nombre del archivo no coincide con el consignado en el contenido del XML");
			Errores.Add("2334", "El documento electrónico ingresado ha sido alterado");
			Errores.Add("2335", "El documento electrónico ingresado ha sido alterado");
			Errores.Add("2336", "Ocurrió un error en el proceso de validación de la firma digital");
			Errores.Add("2337", "La moneda debe ser la misma en todo el documento");
			Errores.Add("2338", "La moneda debe ser la misma en todo el documento");
			Errores.Add("2339", "El dato ingresado en PayableAmount no cumple con el formato establecido");
			Errores.Add("2340", "El valor ingresado en AdditionalMonetaryTotal / cbc:ID es incorrecto");
			Errores.Add("2341", "AdditionalMonetaryTotal / cbc:ID debe tener valor");
			Errores.Add("2342", "Fecha de emisión de la factura no coincide con la informada en la comunicación");
			Errores.Add("2343", "cac: TaxTotal / cac:TaxSubtotal / cbc:TaxAmount - El dato ingresado no cumple con el estándar");
			Errores.Add("2344", "El XML no contiene el tag cac: TaxTotal / cac:TaxSubtotal / cbc:TaxAmount");
			Errores.Add("2345", "La serie no corresponde al tipo de comprobante");
			Errores.Add("2346", "La fecha de generación del resumen debe ser igual a la fecha consignada en el nombre del archivo");
			Errores.Add("2347", "Los rangos informados en el archivo XML se encuentran duplicados o superpuestos");
			Errores.Add("2348", "Los documentos informados en el archivo XML se encuentran duplicados");
			Errores.Add("2349", "Debe consignar solo un elemento sac:AdditionalMonetaryTotal con cbc: ID igual a 1001");
			Errores.Add("2350", "Debe consignar solo un elemento sac:AdditionalMonetaryTotal con cbc: ID igual a 1002 CODIGO DESCRIPCION");
			Errores.Add("2351", "Debe consignar solo un elemento sac:AdditionalMonetaryTotal con cbc: ID igual a 1003");
			Errores.Add("2352", "Debe consignar solo un elemento cac:TaxTotal a nivel global para IGV (cbc:ID igual a 1000)");
			Errores.Add("2353", "Debe consignar solo un elemento cac:TaxTotal a nivel global para ISC (cbc:ID igual a 2000)");
			Errores.Add("2354", "Debe consignar solo un elemento cac:TaxTotal a nivel global para Otros (cbc:ID igual a 9999)");
			Errores.Add("2355", "Debe consignar solo un elemento cac:TaxTotal a nivel de ítem para IGV(cbc: ID igual a 1000)");
			Errores.Add("2356", "Debe consignar solo un elemento cac:TaxTotal a nivel de ítem para ISC(cbc: ID igual a 2000)");
			Errores.Add("2357", "Debe consignar solo un elemento sac:BillingPayment a nivel de ítem con cbc: InstructionID igual a 01");
			Errores.Add("2358", "Debe consignar solo un elemento sac:BillingPayment a nivel de ítem con cbc: InstructionID igual a 02");
			Errores.Add("2359", "Debe consignar solo un elemento sac:BillingPayment a nivel de ítem con cbc: InstructionID igual a 03");
			Errores.Add("2360", "Debe consignar solo un elemento sac:BillingPayment a nivel de ítem con cbc: InstructionID igual a 04");
			Errores.Add("2361", "Debe consignar solo un elemento cac:TaxTotal a nivel de ítem para Otros(cbc: ID igual a 9999)");
			Errores.Add("2362", "Debe consignar solo un tag cac:AccountingSupplierParty / cbc:AdditionalAccountID");
			Errores.Add("2363", "Debe consignar solo un tag cac:AccountingCustomerParty / cbc:AdditionalAccountID");
			Errores.Add("2364", "El comprobante contiene un tipo y número de Guía de Remisión repetido");
			Errores.Add("2365", "El comprobante contiene un tipo y número de Documento Relacionado repetido");
			Errores.Add("2366", "El código en el tag sac:AdditionalProperty / cbc:ID debe tener 4 posiciones");
			Errores.Add("2367", "El dato ingresado en PriceAmount del Precio de venta unitario por item no cumple con el formato establecido");
			Errores.Add("2368", "El dato ingresado en TaxSubtotal / cbc:TaxAmount del item no cumple con el formato establecido");
			Errores.Add("2369", "El dato ingresado en PriceAmount del Valor de venta unitario por item no cumple con el formato establecido");
			Errores.Add("2370", "El dato ingresado en LineExtensionAmount del item no cumple con el formato establecido");
			Errores.Add("2371", "El XML no contiene el tag cbc: TaxExemptionReasonCode de Afectacion al IGV");
			Errores.Add("2372", "El tag en el item cac:TaxTotal / cbc:TaxAmount debe tener el mismo valor que cac:TaxTotal / cac:TaxSubtotal / cbc:TaxAmount");
			Errores.Add("2373", "Si existe monto de ISC en el ITEM debe especificar el sistema de cálculo");
			Errores.Add("2374", "La factura a dar de baja tiene una fecha de recepción fuera del plazo permitido");
			Errores.Add("2375", "Fecha de emisión de la boleta no coincide con la fecha de emisión consignada en la comunicación");
			Errores.Add("2376", "La boleta de venta a dar de baja fue informada en un resumen con fecha de recepción fuera del plazo permitido");
			Errores.Add("2377", "El Name o TaxTypeCode debe corresponder con el Id para el IGV");
			Errores.Add("2378", "El Name o TaxTypeCode debe corresponder con el Id para el ISC");
			Errores.Add("2379", "La numeración de boleta de venta a dar de baja fue generada en una fecha fuera del plazo permitido");
			Errores.Add("2380", "El documento tiene observaciones");
			Errores.Add("2381", "Comprobante no cumple con el Grupo 1: No todos los ítems corresponden a operaciones gravadas a IGV");
			Errores.Add("2382", "Comprobante no cumple con el Grupo 2: No todos los ítems corresponden a operaciones inafectas o exoneradas al IGV");
			Errores.Add("2383", "Comprobante no cumple con el Grupo 3: Falta leyenda con código 1002");
			Errores.Add("2384", "Comprobante no cumple con el Grupo 3: Existe ítem con operación onerosa");
			Errores.Add("2385", "Comprobante no cumple con el Grupo 4: Debe existir Total descuentos mayor a cero");
			Errores.Add("2386", "Comprobante no cumple con el Grupo 5: Todos los ítems deben tener operaciones afectas a ISC");
			Errores.Add("2387", "Comprobante no cumple con el Grupo 6: El monto de percepción no existe o es cero");
			Errores.Add("2388", "Comprobante no cumple con el Grupo 6: Todos los ítems deben tener código de Afectación al IGV igual a 10");
			Errores.Add("2389", "Comprobante no cumple con el Grupo 7: El código de moneda no es diferente a PEN");
			Errores.Add("2390", "Comprobante no cumple con el Grupo 8: No todos los ítems corresponden a operaciones gravadas a IGV");
			Errores.Add("2391", "Comprobante no cumple con el Grupo 9: No todos los ítems corresponden a operaciones inafectas o exoneradas al IGV");
			Errores.Add("2392", "Comprobante no cumple con el Grupo 10: Falta leyenda con código 1002");
			Errores.Add("2393", "Comprobante no cumple con el Grupo 10: Existe ítem con operación onerosa");
			Errores.Add("2394", "Comprobante no cumple con el Grupo 11: Debe existir Total descuentos mayor a cero");
			Errores.Add("2395", "Comprobante no cumple con el Grupo 12: El código de moneda no es diferente a PEN");
			Errores.Add("2396", "Si el monto total es mayor a S/. 700.00 debe consignar tipo y numero de documento del adquiriente");
			Errores.Add("2397", "El tipo de documento del adquiriente no puede ser Numero de RUC");
			Errores.Add("2398", "El documento a dar de baja se encuentra rechazado");
			Errores.Add("2399", "El tipo de documento modificado por la Nota de crédito debe ser boleta electrónica");
			Errores.Add("2400", "El tipo de documento modificado por la Nota de débito debe ser boleta electrónica");
			Errores.Add("2401", "No se puede leer (parsear)el archivo XML");
			Errores.Add("2402", "El caso de prueba no existe");
			Errores.Add("2403", "La numeración o nombre del documento ya ha sido enviado anteriormente");
			Errores.Add("2404", "Documento afectado por la nota electrónica no se encuentra autorizado");
			Errores.Add("2405", "Contribuyente no se encuentra autorizado como emisor de boletas electrónicas");
			Errores.Add("2406", "Existe más de un tag sac: AdditionalMonetaryTotal con el mismo ID");
			Errores.Add("2407", "Existe más de un tag sac: AdditionalProperty con el mismo ID");
			Errores.Add("2408", "El dato ingresado en PriceAmount del Valor referencial unitario por ítem no cumple con el formato establecido");
			Errores.Add("2409", "Existe más de un tag cac: AlternativeConditionPrice con el mismo cbc: PriceTypeCode");
			Errores.Add("2410", "Se ha consignado un valor invalido en el campo cbc: PriceTypeCode");
			Errores.Add("2411", "Ha consignado más de un elemento cac: AllowanceCharge con el mismo campo cbc: ChargeIndicator");
			Errores.Add("2412", "Se ha consignado más de un documento afectado por la nota(tag cac: BillingReference)");
			Errores.Add("2413", "Se ha consignado más de un motivo o sustento de la nota(tag cac: DiscrepancyResponse / cbc:Description) CODIGO DESCRIPCION");
			Errores.Add("2414", "No se ha consignado en la nota el tag cac:DiscrepancyResponse");
			Errores.Add("2415", "Se ha consignado en la nota más de un tag cac: DiscrepancyResponse");
			Errores.Add("2416", "Si existe leyenda Transferida Gratuita debe consignar Total Valor de Venta de Operaciones Gratuitas");
			Errores.Add("2417", "Debe consignar Valor Referencial unitario por ítem en operaciones no onerosas");
			Errores.Add("2418", "Si consigna Valor Referencial unitario por ítem en operaciones no onerosas, la operación debe ser no onerosa");
			Errores.Add("2419", "El dato ingresado en AllowanceTotalAmount no cumple con el formato establecido");
			Errores.Add("2420", "Ya transcurrieron más de 25 días calendarios para concluir con su proceso de homologación");
			Errores.Add("2421", "Debe indicar toda la información de sustento de traslado de bienes");
			Errores.Add("2422", "El valor unitario debe ser menor al precio unitario");
			Errores.Add("2423", "Si ha consignado monto ISC a nivel de ítem, debe consignar un monto a nivel de total");
			Errores.Add("2424", "RC Debe consignar solo un elemento sac: BillingPayment a nivel de ítem con cbc: InstructionID igual a 05");
			Errores.Add("2425", "Si la operación es gratuita PriceTypeCode = 02 y cbc:PriceAmount > 0 el código de afectación de igv debe ser no onerosa es decir diferente de 10,20,30");
			Errores.Add("2426", "Documentos relacionados duplicados en el comprobante");
			Errores.Add("2427", "Solo debe de existir un tag AdditionalInformation");
			Errores.Add("2428", "Comprobante no cumple con grupo de facturas con detracciones");
			Errores.Add("2429", "Comprobante no cumple con grupo de facturas con comercio exterior");
			Errores.Add("2430", "Comprobante no cumple con grupo de facturas con tag de factura guía");
			Errores.Add("2431", "Comprobante no cumple con grupo de facturas con tags no tributarios");
			Errores.Add("2432", "Comprobante no cumple con grupo de boletas con tags no tributarios");
			Errores.Add("2433", "Comprobante no cumple con grupo de facturas con tag venta itinerante");
			Errores.Add("2434", "Comprobante no cumple con grupo de boletas con tag venta ");
			Errores.Add("2435", "Comprobante no cumple con grupo de boletas con ISC");
			Errores.Add("2436", "Comprobante no cumple con el grupo de boletas de venta con percepción: El monto de percepción no existe o es cero");
			Errores.Add("2437", "Comprobante no cumple con el grupo de boletas de venta con percepción: Todos los ítems deben tener código de Afectación al IGV igual a 10");
			Errores.Add("2438", "Comprobante no cumple con grupo de facturas con tag venta anticipada I");
			Errores.Add("2439", "Comprobante no cumple con grupo de facturas con tag venta anticipada II");
			Errores.Add("2500", "Ingresar descripción y valor venta por ítem para documento de anticipos");
			Errores.Add("2501", "Valor venta debe ser mayor a cero");
			Errores.Add("2502", "Los valores totales deben ser mayores a cero");
			Errores.Add("2503", "PaidAmount: monto anticipado por documento debe ser mayor a cero");
			Errores.Add("2504", "Falta referencia de la factura relacionada con anticipo");
			Errores.Add("2505", "cac: PrepaidPayment / cbc:ID / @SchemaID: Código de referencia debe ser 02 o 03");
			Errores.Add("2506", "cac: PrepaidPayment / cbc:ID: Factura o boleta no existe o comunicada de Baja");
			Errores.Add("2507", "Factura relacionada con anticipo no corresponde como factura de anticipo");
			Errores.Add("2508", "Ingresar documentos por anticipos");
			Errores.Add("2509", "Total de anticipos diferente a los montos anticipados por documento");
			Errores.Add("2510", "Nro nombre del documento no tiene el formato correcto");
			Errores.Add("2511", "El tipo de documento no es aceptado");
			Errores.Add("2512", "No existe información de serie o número");
			Errores.Add("2513", "Dato no cumple con formato de acuerdo al número de comprobante");
			Errores.Add("2514", "No existe información de receptor de documento");
			Errores.Add("2515", "Dato ingresado no cumple con catalogo 6");
			Errores.Add("2516", "Debe indicar tipo de documento");
			Errores.Add("2517", "Dato no cumple con formato establecido");
			Errores.Add("2518", "Calculo IGV no es correcto");
			Errores.Add("2519", "El importe total no coincide con la sumatoria de los valores de venta mas los tributos mas los cargos");
			Errores.Add("2520", "cac: PrepaidPayment / cbc:InstructionID / @SchemaID – El tipo documento debe ser 6 del catálogo de tipo de documento");
			Errores.Add("2521", "cac: PrepaidPayment / cbc:ID - El dato ingresado debe indicar SERIE - CORRELATIVO del documento que se realizó el anticipo");
			Errores.Add("2522", "No existe información del documento del anticipo.");
			Errores.Add("2523", "GrossWeightMeasure – El dato ingresado no cumple con el formato establecido");
			Errores.Add("2524", "El dato ingresado en Amount no cumple con el formato establecido");
			Errores.Add("2525", "El dato ingresado en Quantity no cumple con el formato establecido");
			Errores.Add("2526", "El dato ingresado en Percent no cumple con el formato establecido");
			Errores.Add("2527", "PrepaidAmount: Monto total anticipado debe ser mayor a cero");
			Errores.Add("2528", "cac: OriginatorDocumentReference / cbc:ID / @SchemaID – El tipo documento debe ser 6 del catálogo de tipo de documento");
			Errores.Add("2529", "RUC que emitió documento de anticipo, no existe");
			Errores.Add("2530", "RUC que solicita la emisión de la factura, no existe");
			Errores.Add("2531", "Código del Local Anexo del emisor no existe");
			Errores.Add("2532", "No existe información de modalidad de transporte");
			Errores.Add("2533", "Si ha consignado Transporte Privado, debe consignar Licencia de conducir, Placa, N constancia de inscripción y marca del vehículo");
			Errores.Add("2534", "Si ha consignado Transporte púbico, debe consignar Datos del transportista");
			Errores.Add("2535", "La nota de crédito por otros conceptos tributarios debe tener Otros Documentos Relacionados");
			Errores.Add("2536", "Serie y número no se encuentra registrado como baja por cambio de destinatario");
			Errores.Add("2537", "cac: OrderReference / cac:DocumentReference / cbc:DocumentTypeCode - El tipo de documento de serie y número dado de baja es incorrecta");
			Errores.Add("2538", "El contribuyente no se encuentra autorizado como emisor electrónico de Guía o de factura o de boleta Factura GEM");
			Errores.Add("2539", "El contribuyente no está activo");
			Errores.Add("2540", "El contribuyente no está habido");
			Errores.Add("2541", "El XML no contiene el tag o no existe información del tipo de documento identidad del remitente");
			Errores.Add("2542", "cac: DespatchSupplierParty / cbc:CustomerAssignedAccountID @schemeID -El valor ingresado como tipo de documento identidad del remitente es incorrecta");
			Errores.Add("2543", "El XML no contiene el tag o no existe información de la dirección completa y detallada en domicilio fiscal");
			Errores.Add("2544", "El XML no contiene el tag o no existe información de la provincia en domicilio fiscal");
			Errores.Add("2545", "El XML no contiene el tag o no existe información del departamento en domicilio fiscal");
			Errores.Add("2546", "El XML no contiene el tag o no existe información del distrito en domicilio fiscal");
			Errores.Add("2547", "El XML no contiene el tag o no existe información del país en domicilio fiscal");
			Errores.Add("2548", "El valor del país inválido");
			Errores.Add("2549", "El XML no contiene el tag o no existe información del tipo de documento identidad del destinatario");
			Errores.Add("2550", "cac: DeliveryCustomerParty / cbc:CustomerAssignedAccountID @schemeID -El dato ingresado de tipo de documento identidad del destinatario no cumple con el estándar");
			Errores.Add("2551", "El XML no contiene el tag o no existe información de CustomerAssignedAccountID del proveedor de servicios");
			Errores.Add("2552", "El XML no contiene el tag o no existe información del tipo de documento identidad del proveedor");
			Errores.Add("2553", "cac: SellerSupplierParty / cbc:CustomerAssignedAccountID @schemeID -El dato ingresado no es valido");
			Errores.Add("2554", "Para el motivo de traslado ingresado el Destinatario debe ser igual al remitente");
			Errores.Add("2555", "Destinatario no debe ser igual al remitente");
			Errores.Add("2556", "cbc: TransportModeCode - dato ingresado no es valido");
			Errores.Add("2557", "La fecha del StartDate no debe ser menor al Today");
			Errores.Add("2558", "El XML no contiene el tag o no existe información en Numero de Ruc del transportista");
			Errores.Add("2559", "/ DespatchAdvice / cac:Shipment / cac:ShipmentStage / cac:CarrierParty / cac:PartyIdentification / cbc:ID - El dato ingresado no cumple con el formato establecido");
			Errores.Add("2560", "Transportista no debe ser igual al remitente o destinatario");
			Errores.Add("2561", "El XML no contiene el tag o no existe información del tipo de documento identidad del transportista");
			Errores.Add("2562", "/ DespatchAdvice / cac:Shipment / cac:ShipmentStage / cac:CarrierParty / cac:PartyIdentification / cbc:ID @schemeID -El dato ingresado no es valido");
			Errores.Add("2563", "El XML no contiene el tag o no existe información de Apellido, Nombre o razón social del transportista");
			Errores.Add("2564", "Razón social transportista - El dato ingresado no cumple con el formato establecido");
			Errores.Add("2565", "El XML no contiene el tag o no existe información del tipo de unidad de transporte");
			Errores.Add("2566", "El XML no contiene el tag o no existe información del Número de placa del vehículo");
			Errores.Add("2567", "Número de placa del vehículo - El dato ingresado no cumple con el formato establecido");
			Errores.Add("2568", "El XML no contiene el tag o no existe información en el Numero de documento de identidad del conductor");
			Errores.Add("2569", "Documento identidad del conductor -El dato ingresado no cumple con el formato establecido");
			Errores.Add("2570", "El XML no contiene el tag o no existe información del tipo de documento identidad del conductor");
			Errores.Add("2571", "cac: DriverPerson / ID@schemeID - El valor ingresado de tipo de documento identidad de conductor es incorrecto");
			Errores.Add("2572", "El XML no contiene el tag o no existe información del Numero de licencia del conductor");
			Errores.Add("2573", "Numero de licencia del conductor - El dato ingresado no cumple con el formato establecido");
			Errores.Add("2574", "El XML no contiene el tag o no existe información de dirección detallada de punto de llegada");
			Errores.Add("2575", "El XML no contiene el tag o no existe información de CityName");
			Errores.Add("2576", "El XML no contiene el tag o no existe información de District");
			Errores.Add("2577", "El XML no contiene el tag o no existe información de dirección detallada de punto de partida");
			Errores.Add("2578", "El XML no contiene el tag o no existe información de CityName");
			Errores.Add("2579", "El XML no contiene el tag o no existe información de District");
			Errores.Add("2580", "El XML No contiene el tag o no existe información de la cantidad del ítem");
			Errores.Add("2600", "El comprobante fue enviado fuera del plazo permitido.");
			Errores.Add("2601", "Señor contribuyente a la fecha no se encuentra registrado ó habilitado con la condición de Agente de percepción.");
			Errores.Add("2602", "El régimen percepción enviado no corresponde con su condición de Agente de percepción.");
			Errores.Add("2603", "La tasa de percepción enviada no corresponde con el régimen de percepción.");
			Errores.Add("2604", "El Cliente no puede ser el mismo que el Emisor del comprobante de percepción.");
			Errores.Add("2605", "Número de RUC del Cliente no existe.");
			Errores.Add("2606", "Documento de identidad del Cliente no existe.");
			Errores.Add("2607", "La moneda del importe de cobro debe ser la misma que la del documento relacionado.");
			Errores.Add("2608", "Los montos de pago, percibidos y montos cobrados consignados para el documento relacionado no son correctos.");
			Errores.Add("2609", "El comprobante electrónico enviado no se encuentra registrado en la SUNAT.");
			Errores.Add("2610", "La fecha de emisión, Importe total del comprobante y la moneda del comprobante electrónico enviado no son los registrados en los Sistemas de SUNAT.");
			Errores.Add("2611", "El comprobante electrónico no ha sido emitido al cliente.");
			Errores.Add("2612", "La fecha de cobro debe estar entre el primer día calendario del mes al cual corresponde la fecha de emisión del comprobante de percepción o desde la fecha de emisión del comprobante relacionado.");
			Errores.Add("2613", "El Nro. de documento con número de cobro ya se encuentra en la Relación de Documentos Relacionados agregados.");
			Errores.Add("2614", "El Nro. de documento con el número de cobro ya se encuentra registrado como pago realizado.");
			Errores.Add("2615", "Importe total percibido debe ser igual a la suma de los importes percibidos por cada documento relacionado.");
			Errores.Add("2616", "Importe total cobrado debe ser igual a la suma de los importe totales cobrados por cada documento relacionado.");
			Errores.Add("2617", "Señor contribuyente a la fecha no se encuentra registrado ó habilitado con la condición de Agente de retención.");
			Errores.Add("2618", "El régimen retención enviado no corresponde con su condición de Agente de retención.");
			Errores.Add("2619", "La tasa de retención enviada no corresponde con el régimen de retención.");
			Errores.Add("2620", "El Proveedor no puede ser el mismo que el Emisor del comprobante de retención.");
			Errores.Add("2621", "Número de RUC del Proveedor no existe.");
			Errores.Add("2622", "La moneda del importe de pago debe ser la misma que la del documento relacionado.");
			Errores.Add("2623", "Los montos de pago, retenidos y montos pagados consignados para el documento relacionado no son correctos.");
			Errores.Add("2624", "El comprobante electrónico no ha sido emitido por el proveedor.");
			Errores.Add("2625", "La fecha de pago debe estar entre el primer día calendario del mes al cual corresponde la fecha de emisión del comprobante de retención o desde la fecha de emisión del comprobante relacionado.");
			Errores.Add("2626", "El Nro. de documento con el número de pago ya se encuentra en la Relación de Documentos Relacionados agregados.");
			Errores.Add("2627", "El Nro. de documento con el número de pago ya se encuentra registrado como pago realizado.");
			Errores.Add("2628", "Importe total retenido debe ser igual a la suma de los importes retenidos por cada documento relacionado.");
			Errores.Add("2629", "Importe total pagado debe ser igual a la suma de los importes pagados por cada documento relacionado.");
			Errores.Add("2630", "La serie o número del documento(01) modificado por la Nota de Crédito no cumple con el formato establecido para tipo código Nota Crédito 10.");
			Errores.Add("2631", "La serie o número del documento(12) modificado por la Nota de Crédito no cumple con el formato establecido para tipo código Nota Crédito 10.");
			Errores.Add("2632", "La serie o número del documento(56) modificado por la Nota de Crédito no cumple con el formato establecido para tipo código Nota Crédito 10.");
			Errores.Add("2633", "La serie o número del documento(03) modificado por la Nota de Crédito no cumple con el formato establecido para tipo código Nota Crédito 10.");
			Errores.Add("2634", "ReferenceID - El dato ingresado debe indicar serie correcta del documento al que se relaciona la Nota tipo 10.");
			Errores.Add("2635", "Debe existir DocumentTypeCode de Otros documentos relacionados con valor 99 para un tipo código Nota Crédito 10.");
			Errores.Add("2636", "No existe datos del ID de los documentos relacionados con valor 99 para un tipo código Nota Crédito 10.");
			Errores.Add("2637", "No existe datos del DocumentType de los documentos relacionados con valor 99 para un tipo código Nota Crédito 10.");
			Errores.Add("2640", "Operación gratuita, solo debe consignar un monto referencial");
			Errores.Add("2641", "Operación gratuita, debe consignar Total valor venta - operaciones gratuitas mayor a cero");
			Errores.Add("2642", "Operaciones de exportación, deben consignar Tipo Afectación igual a 40");
			Errores.Add("2643", "Factura de operación sujeta IVAP debe consignar Monto de impuestos por ítem");
			Errores.Add("2644", "Factura de operación sujeta IVAP solo debe tener ítems con código afectación IGV 17.");
			Errores.Add("2645", "Factura de operación sujeta a IVAP debe consignar ítems con código de tributo 1000");
			Errores.Add("2646", "Factura de operación sujeta a IVAP debe consignar ítems con nombre de tributo IVAP");
			Errores.Add("2647", "Código tributo UN / ECE debe ser VAT");
			Errores.Add("2648", "Factura de operación sujeta al IVAP, solo puede consignar información para operación gravadas");
			Errores.Add("2649", "Operación sujeta al IVAP, debe consignar monto en total operaciones gravadas");
			Errores.Add("2650", "Factura de operación sujeta al IVAP, no debe consignar valor para ISC o debe ser 0");
			Errores.Add("2651", "Factura de operación sujeta al IVAP, no debe consignar valor para IGV o debe ser 0");
			Errores.Add("2652", "Factura de operación sujeta al IVAP, debe registrar mensaje 2007");
			Errores.Add("2653", "Servicios prestados No domiciliados.Total IGV debe ser mayor a cero");
			Errores.Add("2654", "Servicios prestados No domiciliados.Código tributo a consignar debe ser 1000");
			Errores.Add("2655", "Servicios prestados No domiciliados.El código de afectación debe ser 40");
			Errores.Add("2656", "Servicios prestados No domiciliados.Código tributo UN / ECE debe ser VAT");
			Errores.Add("2657", "El Nro.de documento < serie > -< número > ya fue utilizado en la emisión de CPE");
			Errores.Add("2658", "El Nro.de documento < serie > -< número > no se ha informado o no se encuentra en estado Revertido");
			Errores.Add("2659", "La fecha de cobro de cada documento relacionado deben ser del mismo Periodo(mm / aaaa), asimismo estas fechas podrán ser menores o iguales a la fecha de emisión del comprobante de percepción");
			Errores.Add("2660", "Los datos del CPE revertido no corresponden a los registrados en la SUNAT");
			Errores.Add("2661", "La fecha de cobro de cada documento relacionado deben ser del mismo Periodo(mm / aaaa), asimismo estas fechas podrán ser menores o iguales a la fecha de emisión del comprobante de retención");
			Errores.Add("2662", "El Nro.de documento < serie > -< número > ya fue utilizado en la emisión de CRE.");
			Errores.Add("2663", "El documento indicado no existe no puede ser modificado / eliminado");
			Errores.Add("2664", "El cálculo de la base imponible de percepción y el monto de la percepción no coincide con el monto total informado.");
			Errores.Add("2665", "El contribuyente no se encuentra autorizado a emitir Tickets");
			Errores.Add("2666", "Las percepciones son solo válidas para boletas de venta al contado.");
			Errores.Add("2667", "Importe total percibido debe ser igual a la suma de los importes percibidos por cada documento relacionado.");
			Errores.Add("2668", "Importe total cobrado debe ser igual a la suma de los importes cobrados por cada documento relacionado.");
			Errores.Add("2669", "El dato ingresado en TotalInvoiceAmount debe ser numérico mayor a cero");
			Errores.Add("2670", "La razón social no corresponde al ruc informado.");
			Errores.Add("2671", "La fecha de generación de la comunicación debe ser mayor o igual a la fecha de generación del documento revertido.");
			Errores.Add("2672", "La fecha de generación del documento revertido debe ser menor o igual a la fecha actual.");
			Errores.Add("2673", "El dato ingresado no cumple con el formato RR - fecha - correlativo.");
			Errores.Add("2674", "El dato ingresado no cumple con el formato de DocumentSerialID, para DocumentTypeCode con valor 20.");
			Errores.Add("2675", "El dato ingresado no cumple con el formato de DocumentSerialID, para DocumentTypeCode con valor 40.");
			Errores.Add("2676", "El XML no contiene el tag o no existe información del número de RUC del emisor");
			Errores.Add("2677", "El valor ingresado como número de RUC del emisor es incorrecto");
			Errores.Add("2678", "El XML no contiene el atributo o no existe información del tipo de documento del emisor");
			Errores.Add("2679", "El XML no contiene el tag o no existe información del número de documento de identidad del cliente");
			Errores.Add("2680", "El valor ingresado como documento de identidad del cliente es incorrecto");
			Errores.Add("2681", "El XML no contiene el atributo o no existe información del tipo de documento del cliente");
			Errores.Add("2682", "El valor ingresado como tipo de documento del cliente es incorrecto");
			Errores.Add("2683", "El XML no contiene el tag o no existe información del Importe total Percibido");
			Errores.Add("2684", "El XML no contiene el tag o no existe información de la moneda del Importe total Percibido");
			Errores.Add("2685", "El valor de la moneda del Importe total Percibido debe ser PEN");
			Errores.Add("2686", "El XML no contiene el tag o no existe información del Importe total Cobrado");
			Errores.Add("2687", "El dato ingresado en SUNATTotalCashed debe ser numérico mayor a cero");
			Errores.Add("2689", "El XML no contiene el tag o no existe información de la moneda del Importe total Cobrado");
			Errores.Add("2690", "El valor de la moneda del Importe total Cobrado debe ser PEN");
			Errores.Add("2691", "El XML no contiene el tag o no existe información del tipo de documento relacionado");
			Errores.Add("2692", "El tipo de documento relacionado no es válido");
			Errores.Add("2693", "El XML no contiene el tag o no existe información del número de documento relacionado");
			Errores.Add("2694", "El número de documento relacionado no está permitido o no es valido");
			Errores.Add("2695", "El XML no contiene el tag o no existe información del Importe total documento Relacionado");
			Errores.Add("2696", "El dato ingresado en el importe total documento relacionado debe ser numérico mayor a cero");
			Errores.Add("2697", "El XML no contiene el tag o no existe información del número de cobro");
			Errores.Add("2698", "El dato ingresado en el número de cobro no es válido");
			Errores.Add("2699", "El XML no contiene el tag o no existe información del Importe del cobro");
			Errores.Add("2700", "El dato ingresado en el Importe del cobro debe ser numérico mayor a cero");
			Errores.Add("2701", "El XML no contiene el tag o no existe información de la moneda del documento Relacionado");
			Errores.Add("2702", "El XML no contiene el tag o no existe información de la fecha de cobro del documento Relacionado");
			Errores.Add("2703", "La fecha de cobro del documento relacionado no es válido");
			Errores.Add("2704", "El XML no contiene el tag o no existe información del Importe percibido");
			Errores.Add("2705", "El dato ingresado en el Importe percibido debe ser numérico mayor a cero");
			Errores.Add("2706", "El XML no contiene el tag o no existe información de la moneda de importe percibido");
			Errores.Add("2707", "El valor de la moneda de importe percibido debe ser PEN");
			Errores.Add("2708", "El XML no contiene el tag o no existe información de la Fecha de Percepción");
			Errores.Add("2709", "La fecha de percepción no es válido");
			Errores.Add("2710", "El XML no contiene el tag o no existe información del Monto total a cobrar");
			Errores.Add("2711", "El dato ingresado en el Monto total a cobrar debe ser numérico mayor a cero");
			Errores.Add("2712", "El XML no contiene el tag o no existe información de la moneda del Monto total a cobrar");
			Errores.Add("2713", "El valor de la moneda del Monto total a cobrar debe ser PEN");
			Errores.Add("2714", "El valor de la moneda de referencia para el tipo de cambio no es válido");
			Errores.Add("2715", "El valor de la moneda objetivo para la Tasa de Cambio debe ser PEN");
			Errores.Add("2716", "El dato ingresado en el tipo de cambio debe ser numérico mayor a cero");
			Errores.Add("2717", "La fecha de cambio no es válido");
			Errores.Add("2718", "El valor de la moneda del documento Relacionado no es válido");
			Errores.Add("2719", "El XML no contiene el tag o no existe información de la moneda de referencia para el tipo de cambio");
			Errores.Add("2720", "El XML no contiene el tag o no existe información de la moneda objetivo para la Tasa de Cambio");
			Errores.Add("2721", "El XML no contiene el tag o no existe información del tipo de cambio");
			Errores.Add("2722", "El XML no contiene el tag o no existe información de la fecha de cambio");
			Errores.Add("2723", "El XML no contiene el tag o no existe información del número de documento de identidad del proveedor");
			Errores.Add("2724", "El valor ingresado como documento de identidad del proveedor es incorrecto");
			Errores.Add("2725", "El XML no contiene el tag o no existe información del Importe total Retenido");
			Errores.Add("2726", "El XML no contiene el tag o no existe información de la moneda del Importe total Retenido");
			Errores.Add("2727", "El XML no contiene el tag o no existe información de la moneda del Importe total Retenido");
			Errores.Add("2728", "El valor de la moneda del Importe total Retenido debe ser PEN");
			Errores.Add("2729", "El XML no contiene el tag o no existe información del Importe total Pagado");
			Errores.Add("2730", "El dato ingresado en SUNATTotalPaid debe ser numérico mayor a cero");
			Errores.Add("2731", "El XML no contiene el tag o no existe información de la moneda del Importe total Pagado");
			Errores.Add("2732", "El valor de la moneda del Importe total Pagado debe ser PEN");
			Errores.Add("2733", "El XML no contiene el tag o no existe información del número de pago");
			Errores.Add("2734", "El dato ingresado en el número de pago no es válido");
			Errores.Add("2735", "El XML no contiene el tag o no existe información del Importe del pago");
			Errores.Add("2736", "El dato ingresado en el Importe del pago debe ser numérico mayor a cero");
			Errores.Add("2737", "El XML no contiene el tag o no existe información de la fecha de pago del documento Relacionado");
			Errores.Add("2738", "La fecha de pago del documento relacionado no es válido");
			Errores.Add("2739", "El XML no contiene el tag o no existe información del Importe retenido");
			Errores.Add("2740", "El dato ingresado en el Importe retenido debe ser numérico mayor a cero");
			Errores.Add("2741", "El XML no contiene el tag o no existe información de la moneda de importe retenido");
			Errores.Add("2742", "El valor de la moneda de importe retenido debe ser PEN");
			Errores.Add("2743", "El XML no contiene el tag o no existe información de la Fecha de Retención");
			Errores.Add("2744", "La fecha de retención no es válido");
			Errores.Add("2745", "El XML no contiene el tag o no existe información del Importe total a pagar(neto)");
			Errores.Add("2746", "El dato ingresado en el Importe total a pagar(neto) debe ser numérico mayor a cero");
			Errores.Add("2747", "El XML no contiene el tag o no existe información de la Moneda del monto neto pagado");
			Errores.Add("2748", "El valor de la Moneda del monto neto pagado debe ser PEN");
			Errores.Add("2749", "La moneda de referencia para el tipo de cambio debe ser la misma que la del documento relacionado");
			Errores.Add("2750", "El comprobante que se informa debe existir y estar en estado emitido");
			Errores.Add("2751", "El comprobante que se informa ya se encuentra en estado revertido");
			Errores.Add("2752", "El número de ítem no puede estar duplicado");
			Errores.Add("4000", "El documento ya fue presentado anteriormente.");
			Errores.Add("4001", "El número de RUC del receptor no existe.");
			Errores.Add("4002", "Para el TaxTypeCode, está usando un valor que no existe en el catálogo.");
			Errores.Add("4003", "El comprobante fue registrado previamente como rechazado.");
			Errores.Add("4004", "El DocumentTypeCode de las guías debe existir y tener 2 posiciones");
			Errores.Add("4005", "El DocumentTypeCode de las guías debe ser 09 o 31");
			Errores.Add("4006", "El ID de las guías debe tener información de la SERIE - NUMERO de guía.");
			Errores.Add("4007", "El XML no contiene el ID de las guías.");
			Errores.Add("4008", "El DocumentTypeCode de Otros documentos relacionados no cumple con el estándar.");
			Errores.Add("4009", "El DocumentTypeCode de Otros documentos relacionados tiene valores incorrectos.");
			Errores.Add("4010", "El ID de los documentos relacionados no cumplen con el estándar");
			Errores.Add("4011", "El XML no contiene el tag ID de documentos relacionados.");
			Errores.Add("4012", "El ubigeo indicado en el comprobante no es el mismo que está registrado para el contribuyente.");
			Errores.Add("4013", "El RUC del receptor no está activo");
			Errores.Add("4014", "El RUC del receptor no está habido");
			Errores.Add("4015", "Si el tipo de documento del receptor no es RUC, debe tener operaciones de exportación");
			Errores.Add("4016", "El total valor venta neta de oper.gravadas IGV debe ser mayor a 0.00 o debe existir oper.gravadas onerosas");
			Errores.Add("4017", "El total valor venta neta de oper.inafectas IGV debe ser mayor a 0.00 o debe existir oper.inafectas onerosas o de export.");
			Errores.Add("4018", "El total valor venta neta de oper.exoneradas IGV debe ser mayor a 0.00 o debe existir oper.exoneradas");
			Errores.Add("4019", "El cálculo del IGV no es correcto");
			Errores.Add("4020", "El ISC no está informado correctamente");
			Errores.Add("4021", "Si se utiliza la leyenda con código 2000, el importe de percepción debe ser mayor a 0.00");
			Errores.Add("4022", "Si se utiliza la leyenda con código 2001, el total de operaciones exoneradas debe ser mayor a 0.00");
			Errores.Add("4023", "Si se utiliza la leyenda con código 2002, el total de operaciones exoneradas debe ser mayor a 0.00");
			Errores.Add("4024", "Si se utiliza la leyenda con código 2003, el total de operaciones exoneradas debe ser mayor a 0.00");
			Errores.Add("4025", "Si usa la leyenda de Transferencia o Servicio gratuito, todos los ítems deben ser no onerosos");
			Errores.Add("4026", "No se puede indicar Guia de remisión de remitente y Guia de remisión de transportista en el mismo documento");
			Errores.Add("4027", "El importe total no coincide con la sumatoria de los valores de venta mas los tributos mas los cargos");
			Errores.Add("4028", "El monto total de la nota de crédito debe ser menor o igual al monto de la factura");
			Errores.Add("4029", "El ubigeo indicado en el comprobante no es el mismo que está registrado para el contribuyente");
			Errores.Add("4030", "El ubigeo indicado en el comprobante no es el mismo que está registrado para el contribuyente");
			Errores.Add("4031", "Debe indicar el nombre comercial");
			Errores.Add("4032", "Si el código del motivo de emisión de la Nota de Crédito es 03, debe existir la descripción del ítem");
			Errores.Add("4033", "La fecha de generación de la numeración debe ser menor o igual a la fecha de generación de la comunicación");
			Errores.Add("4034", "El comprobante fue registrado previamente como baja");
			Errores.Add("4035", "El comprobante fue registrado previamente como rechazado");
			Errores.Add("4036", "La fecha de emisión de los rangos debe ser menor o igual a la fecha de generación del resumen");
			Errores.Add("4037", "El cálculo del Total de IGV del Ítem no es correcto");
			Errores.Add("4038", "El resumen contiene menos series por tipo de documento que el envío anterior para la misma fecha de emisión");
			Errores.Add("4039", "No ha consignado información del ubigeo del domicilio fiscal");
			Errores.Add("4040", "Si el importe de percepción es mayor a 0.00, debe utilizar una leyenda con código 2000");
			Errores.Add("4041", "El código de país debe ser PE");
			Errores.Add("4042", "Para sac: SUNATTransaction / cbc:ID, se está usando un valor que no existe en el catálogo.Nro. 17");
			Errores.Add("4043", "Para el TransportModeCode, se está usando un valor que no existe en el catálogo Nro. 18");
			Errores.Add("4044", "PrepaidAmount: Monto total anticipado no coincide con la sumatoria de los montos por documento de anticipo");
			Errores.Add("4045", "No debe consignar los datos del transportista para la modalidad de transporte 02 – Transporte Privado");
			Errores.Add("4046", "No debe consignar información adicional en la dirección para los locales anexos");
			Errores.Add("4047", "sac: SUNATTransaction / cbc:ID debe ser igual a 06 cuando ingrese información para sustentar el traslado");
			Errores.Add("4048", "cac: AdditionalDocumentReference / cbc:DocumentTypeCode - Contiene un valor no valido para documentos relacionado");
			Errores.Add("4049", "El número de DNI del receptor no existe");
			Errores.Add("4050", "El número de RUC del proveedor no existe");
			Errores.Add("4051", "El RUC del proveedor no está activo");
			Errores.Add("4052", "El RUC del proveedor no está habido");
			Errores.Add("4053", "Proveedor no debe ser igual al remitente o destinatario");
			Errores.Add("4054", "La guía no debe contener datos del proveedor");
			Errores.Add("4055", "El XML no contiene información en el tag cbc: Information");
			Errores.Add("4056", "El XML no contiene el tag o no existe información en el tag SplitConsignmentIndicator");
			Errores.Add("4057", "GrossWeightMeasure – El dato ingresado no cumple con el formato establecido");
			Errores.Add("4058", "cbc: TotalPackageQuantity - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4059", "Numero de bultos o pallets - información válida para importación");
			Errores.Add("4060", "La guía no debe contener datos del transportista");
			Errores.Add("4061", "El número de RUC del transportista no existe");
			Errores.Add("4062", "El RUC del transportista no está activo");
			Errores.Add("4063", "El RUC del transportista no está habido");
			Errores.Add("4064", "/ DespatchAdvice / cac:Shipment / cac:ShipmentStage / cac:TransportMeans / cbc:RegistrationNationalityID - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4065", "cac: TransportMeans / cbc:TransportMeansTypeCode - El valor ingresado como tipo de unidad de transporte es incorrecta");
			Errores.Add("4066", "El número de DNI del conductor no existe");
			Errores.Add("4067", "El XML no contiene el tag o no existe información del ubigeo del punto de llegada");
			Errores.Add("4068", "Dirección de punto de llegada - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4069", "CityName - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4070", "District - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4071", "Numero de Contenedor - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4072", "Numero de contenedor - información válida para importación");
			Errores.Add("4073", "TransEquipmentTypeCode - El valor ingresado como tipo de contenedor es incorrecta");
			Errores.Add("4074", "Numero Precinto -El dato ingresado no cumple con el formato establecido");
			Errores.Add("4075", "El XML no contiene el tag o no existe información del ubigeo del punto de partida");
			Errores.Add("4076", "Dirección de punto de partida - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4077", "CityName - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4078", "District - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4079", "Código de Puerto o Aeropuerto - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4080", "Tipo de Puerto o Aeropuerto - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4081", "El XML No contiene El tag o No existe información del Numero de orden del ítem");
			Errores.Add("4082", "Número de Orden del Ítem - El orden del ítem no cumple con el formato establecido");
			Errores.Add("4083", "Cantidad - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4084", "Descripción del Ítem - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4085", "Código del Ítem - El dato ingresado no cumple con el formato establecido");
			Errores.Add("4086", "El emisor y el cliente son Agentes de percepción de combustible en la fecha de emisión.");
			Errores.Add("4087", "El Comprobante de Pago Electrónico no está Registrado en los Sistemas de la SUNAT.");
			Errores.Add("4088", "El Comprobante de Pago no está autorizado en los Sistemas de la SUNAT.");
			Errores.Add("4089", "La operación con este cliente está excluida del sistema de percepción.Es agente de retención.");
			Errores.Add("4090", "La operación con este cliente está excluida del sistema de percepción.Es entidad exceptuada de la percepción.");
			Errores.Add("4091", "La operación con este proveedor está excluida del sistema de retención.Es agente de percepción, agente de retención o buen contribuyente.");
			Errores.Add("4092", "El nombre comercial del emisor no cumple con el formato establecido");
			Errores.Add("4093", "El ubigeo del emisor no cumple con el formato establecido o no es válido");
			Errores.Add("4094", "La dirección completa y detallada del domicilio fiscal del emisor no cumple con el formato establecido");
			Errores.Add("4095", "La urbanización del domicilio fiscal del emisor no cumple con el formato establecido");
			Errores.Add("4096", "La provincia del domicilio fiscal del emisor no cumple con el formato establecido");
			Errores.Add("4097", "El departamento del domicilio fiscal del emisor no cumple con el formato establecido");
			Errores.Add("4098", "El distrito del domicilio fiscal del emisor no cumple con el formato establecido");
			Errores.Add("4099", "El nombre comercial del cliente no cumple con el formato establecido");
			Errores.Add("4100", "El ubigeo del cliente no cumple con el formato establecido o no es válido");
			Errores.Add("4101", "La dirección completa y detallada del domicilio fiscal del cliente no cumple con el formato establecido");
			Errores.Add("4102", "La urbanización del domicilio fiscal del cliente no cumple con el formato establecido");
			Errores.Add("4103", "La provincia del domicilio fiscal del cliente no cumple con el formato establecido");
			Errores.Add("4104", "El departamento del domicilio fiscal del cliente no cumple con el formato establecido");
			Errores.Add("4105", "El distrito del domicilio fiscal del cliente no cumple con el formato establecido");
			Errores.Add("4106", "El nombre comercial del proveedor no cumple con el formato establecido");
			Errores.Add("4107", "El ubigeo del proveedor no cumple con el formato establecido o no es válido");
			Errores.Add("4108", "La dirección completa y detallada del domicilio fiscal del proveedor no cumple con el formato establecido");
			Errores.Add("4109", "La urbanización del domicilio fiscal del proveedor no cumple con el formato establecido");
			Errores.Add("4110", "La provincia del domicilio fiscal del proveedor no cumple con el formato establecido");
			Errores.Add("4111", "El departamento del domicilio fiscal del proveedor no cumple con el formato establecido");
			Errores.Add("4112", "El distrito del domicilio fiscal del proveedor no cumple con el formato establecido");
		}

		public static string MensajeError(string CodigoError)
		{
			string str = "";
			try
			{
				if (Errores.Count == 0)
					LlenarDiccionario();
				str = Errores[CodigoError];
			}
			catch (Exception ex)
			{
			}
			return str;
		}
	}
}
